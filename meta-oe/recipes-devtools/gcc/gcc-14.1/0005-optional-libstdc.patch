From: Richard Purdie <richard.purdie@linuxfoundation.org>
Subject: [PATCH 3/5] gcc: Add --nostdlib++ option

[gcc-runtime builds libstdc++ separately from gcc-cross-*. Its configure tests using g++
will not run correctly since by default the linker will try to link against libstdc++
which shouldn't exist yet. We need an option to disable -lstdc++
option whilst leaving -lc, -lgcc and other automatic library dependencies added by gcc
driver. This patch adds such an option which only disables the -lstdc++.]

[A "standard" gcc build uses xgcc and hence avoids this. We should ask upstream how to
do this officially, the likely answer is don't build libstdc++ separately.]

OpenEmbedded/Yocto Project builds libgcc and the other gcc runtime libraries
separately from the compiler and slightly differently to the standard gcc build.

In general this works well but in trying to build them separately we run into
an issue since we're using our gcc, not xgcc and there is no way to tell configure
to use libgcc but not look for libstdc++.

This adds such an option allowing such configurations to work.

2021-10-26 Richard Purdie <richard.purdie@linuxfoundation.org>

gcc/c-family/ChangeLog:

    * c.opt: Add --nostdlib++ option

gcc/cp/ChangeLog:

    * g++spec.c (lang_specific_driver): Add --nostdlib++ option

gcc/ChangeLog:

    * doc/invoke.texi: Document --nostdlib++ option
    * gcc.c: Add --nostdlib++ option

Signed-off-by: Richard Purdie <richard.purdie@linuxfoundation.org>

Upstream-Status: Submitted [https://gcc.gnu.org/pipermail/gcc-patches/2021-October/582724.html]
---
 gcc/c-family/c.opt  | 4 ++++
 gcc/doc/invoke.texi | 8 +++++++-
 gcc/gcc.cc          | 1 +
 3 files changed, 12 insertions(+), 1 deletion(-)

diff --git a/gcc/c-family/c.opt b/gcc/c-family/c.opt
index 403abc1f2..29a8d73cb 100644
--- a/gcc/c-family/c.opt
+++ b/gcc/c-family/c.opt
@@ -2419,6 +2419,10 @@ nostdinc++
 C++ ObjC++
 Do not search standard system include directories for C++.
 
+nostdlib++
+Driver
+Do not link standard C++ runtime library
+
 o
 C ObjC C++ ObjC++ Joined Separate
 ; Documented in common.opt
diff --git a/gcc/doc/invoke.texi b/gcc/doc/invoke.texi
index bea965fbd..036bf9e78 100644
--- a/gcc/doc/invoke.texi
+++ b/gcc/doc/invoke.texi
@@ -241,6 +241,7 @@ in the following sections.
 -fno-weak  -nostdinc++
 -fvisibility-inlines-hidden
 -fvisibility-ms-compat
+-nostdlib++
 -fext-numeric-literals
 -flang-info-include-translate@r{[}=@var{header}@r{]}
 -flang-info-include-translate-not
@@ -704,7 +705,7 @@ Objective-C and Objective-C++ Dialects}.
 -pie  -pthread  -r  -rdynamic
 -s  -static  -static-pie  -static-libgcc  -static-libstdc++
 -static-libasan  -static-libtsan  -static-liblsan  -static-libubsan
--shared  -shared-libgcc  -symbolic
+-shared  -shared-libgcc  -symbolic -nostdlib++
 -T @var{script}  -Wl,@var{option}  -Xlinker @var{option}
 -u @var{symbol}  -z @var{keyword}}
 
@@ -18736,6 +18737,11 @@ Specify that the program entry point is @var{entry}.  The argument is
 interpreted by the linker; the GNU linker accepts either a symbol name
 or an address.
 
+@opindex nostdlib++
+@item -nostdlib++
+Do not use the standard system C++ runtime libraries when linking.
+Only the libraries you specify will be passed to the linker.
+
 @opindex pie
 @item -pie
 Produce a dynamically linked position independent executable on targets
diff --git a/gcc/gcc.cc b/gcc/gcc.cc
index 1a1ca0506..bdbb5b133 100644
--- a/gcc/gcc.cc
+++ b/gcc/gcc.cc
@@ -1172,6 +1172,7 @@ proper position among the other output files.  */
     " STACK_SPLIT_SPEC "\
     %{fprofile-arcs|fcondition-coverage|fprofile-generate*|coverage:-lgcov} " SANITIZER_SPEC " \
     %{!nostdlib:%{!r:%{!nodefaultlibs:%(link_ssp) %(link_gcc_c_sequence)}}}\
+    %{!nostdlib++:}\
     %{!nostdlib:%{!r:%{!nostartfiles:%E}}} %{T*}  \n%(post_link) }}}}}}"
 #endif
 
-- 
2.43.0

