From 11fc513a6e3ec5552b092a24b620cff5d40d3f1c Mon Sep 17 00:00:00 2001
From: Captain <openatv@gmail.com>
Date: Wed, 22 May 2024 20:32:48 +0200
Subject: [PATCH] stb-settings-21

---
 addons/skin.estuary/xml/Home.xml           |  2 +-
 cmake/modules/FindFFMPEG.cmake             | 48 +++++++++------
 cmake/platform/linux/stb.cmake             | 69 ++++++++++++++++++++++
 cmake/scripts/linux/ArchSetup.cmake        |  4 ++
 cmake/treedata/common/stb.txt              |  1 +
 system/settings/settings.xml               | 14 ++---
 tools/Linux/kodi.sh.in                     | 52 ++++++++++++----
 tools/depends/target/ffmpeg/CMakeLists.txt | 30 ++++++++++
 tools/depends/target/libdvdcss/Makefile    |  4 +-
 tools/depends/target/libdvdnav/Makefile    |  4 +-
 tools/depends/target/libdvdread/Makefile   |  5 +-
 xbmc/guilib/guiinfo/SystemGUIInfo.cpp      |  3 +
 xbmc/input/InputManager.cpp                | 12 ++++
 xbmc/view/ViewStateSettings.cpp            |  2 +-
 14 files changed, 203 insertions(+), 47 deletions(-)
 create mode 100644 cmake/platform/linux/stb.cmake
 create mode 100644 cmake/treedata/common/stb.txt

diff --git a/addons/skin.estuary/xml/Home.xml b/addons/skin.estuary/xml/Home.xml
index 3cd090d..e18a405 100644
--- a/addons/skin.estuary/xml/Home.xml
+++ b/addons/skin.estuary/xml/Home.xml
@@ -1059,7 +1059,7 @@
 					<align>justify</align>
 					<include content="IconButton">
 						<param name="control_id" value="804" />
-						<param name="onclick" value="ActivateWindow(shutdownmenu)" />
+						<param name="onclick" value="Shutdown" />
 						<param name="icon" value="icons/power.png" />
 						<param name="label" value="$LOCALIZE[33060]" />
 					</include>
diff --git a/cmake/modules/FindFFMPEG.cmake b/cmake/modules/FindFFMPEG.cmake
index 76857b0..3b5f1e0 100644
--- a/cmake/modules/FindFFMPEG.cmake
+++ b/cmake/modules/FindFFMPEG.cmake
@@ -48,6 +48,12 @@ macro(buildFFMPEG)
                              -DENABLE_VDPAU=${ENABLE_VDPAU}
                              -DEXTRA_FLAGS=${FFMPEG_EXTRA_FLAGS})
 
+  if(WITH_FFMPEG STREQUAL stb)
+    list(APPEND FFMPEG_OPTIONS -DFFMPEG_TARGET=${FFMPEG_TARGET})
+  endif()
+
+
+
   if(KODI_DEPENDSBUILD)
     set(CROSS_ARGS -DDEPENDS_PATH=${DEPENDS_PATH}
                    -DPKG_CONFIG_EXECUTABLE=${PKG_CONFIG_EXECUTABLE}
@@ -97,13 +103,13 @@ macro(buildFFMPEG)
     add_dependencies(ffmpeg dav1d::dav1d)
   endif()
 
-  find_program(BASH_COMMAND bash)
-  if(NOT BASH_COMMAND)
-    message(FATAL_ERROR "Internal FFmpeg requires bash.")
-  endif()
+#  find_program(BASH_COMMAND bash)
+#  if(NOT BASH_COMMAND)
+#    message(FATAL_ERROR "Internal FFmpeg requires bash.")
+#  endif()
   file(WRITE ${CMAKE_BINARY_DIR}/${CORE_BUILD_DIR}/ffmpeg/ffmpeg-link-wrapper
-"#!${BASH_COMMAND}
-if [[ $@ == *${APP_NAME_LC}.bin* || $@ == *${APP_NAME_LC}${APP_BINARY_SUFFIX}* || $@ == *${APP_NAME_LC}.so* || $@ == *${APP_NAME_LC}-test* || $@ == *MacOS/Kodi* ]]
+"#!/bin/bash
+if [[ $@ == *${APP_NAME_LC}.bin* || $@ == *${APP_NAME_LC}${APP_BINARY_SUFFIX}* || $@ == *${APP_NAME_LC}.so* || $@ == *${APP_NAME_LC}-test* ]]
 then
   avcodec=`PKG_CONFIG_PATH=${DEPENDS_PATH}/lib/pkgconfig ${PKG_CONFIG_EXECUTABLE} --libs --static libavcodec`
   avformat=`PKG_CONFIG_PATH=${DEPENDS_PATH}/lib/pkgconfig ${PKG_CONFIG_EXECUTABLE} --libs --static libavformat`
@@ -116,6 +122,7 @@ then
 else
   $@
 fi")
+
   file(COPY ${CMAKE_BINARY_DIR}/${CORE_BUILD_DIR}/ffmpeg/ffmpeg-link-wrapper
        DESTINATION ${CMAKE_BINARY_DIR}/${CORE_BUILD_DIR}
        FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE)
@@ -163,19 +170,22 @@ endmacro()
 # Allows building with external ffmpeg not found in system paths,
 # without library version checks
 if(WITH_FFMPEG)
-  set(FFMPEG_PATH ${WITH_FFMPEG})
-  message(STATUS "Warning: FFmpeg version checking disabled")
-  set(REQUIRED_FFMPEG_VERSION undef)
-else()
-  # required ffmpeg library versions
-  set(REQUIRED_FFMPEG_VERSION 6.0.0)
-  set(_avcodec_ver ">=60.2.100")
-  set(_avfilter_ver ">=9.3.100")
-  set(_avformat_ver ">=60.3.100")
-  set(_avutil_ver ">=58.2.100")
-  set(_postproc_ver ">=57.1.100")
-  set(_swresample_ver ">=4.10.100")
-  set(_swscale_ver ">=7.1.100")
+  if(WITH_FFMPEG STREQUAL stb)
+    set(FFMPEG_TARGET ${WITH_FFMPEG})
+    set(REQUIRED_FFMPEG_VERSION 5.0.0)
+  else()
+    set(FFMPEG_TARGET "")
+    set(FFMPEG_PATH ${WITH_FFMPEG})
+    message(STATUS "Warning: FFmpeg version checking disabled")
+    set(REQUIRED_FFMPEG_VERSION undef)
+    unset(_avcodec_ver)
+    unset(_avfilter_ver)
+    unset(_avformat_ver)
+    unset(_avutil_ver)
+    unset(_postproc_ver)
+    unset(_swresample_ver)
+    unset(_swscale_ver)
+  endif()
 endif()
 
 # Allows building with external ffmpeg not found in system paths,
diff --git a/cmake/platform/linux/stb.cmake b/cmake/platform/linux/stb.cmake
new file mode 100644
index 0000000..e1fe54a
--- /dev/null
+++ b/cmake/platform/linux/stb.cmake
@@ -0,0 +1,69 @@
+set(PLATFORM_REQUIRED_DEPS EGL LibInput Xkbcommon)
+set(PLATFORM_OPTIONAL_DEPS VAAPI)
+
+set(STB_RENDER_SYSTEM "" CACHE STRING "Render system to use with STB: \"gl\" or \"gles\"")
+
+if(ENABLE_OPENGL STREQUAL "ON")
+  list(APPEND PLATFORM_REQUIRED_DEPS OpenGl)
+  set(APP_RENDER_SYSTEM gl)
+  message(STATUS "STB_RENDER_SYSTEM=GL")
+elseif(ENABLE_GLES STREQUAL "ON")
+  list(APPEND PLATFORM_REQUIRED_DEPS OpenGLES)
+  set(APP_RENDER_SYSTEM gles)
+  message(STATUS "STB_RENDER_SYSTEM=GLES")
+else()
+  message(SEND_ERROR "You need to decide whether you want to use GL- or GLES-based rendering in combination with the STB windowing system. Please set STB_RENDER_SYSTEM to either \"gl\" or \"gles\". For normal desktop systems, you will usually want to use \"gl\".")
+endif()
+
+if(WITH_PLATFORM STREQUAL "GB-cortexa15")
+  set(CPU cortexa15)
+  list(APPEND PLATFORM_DEFINES "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -DTARGET_STB -DTARGET_STB_EXTEND -DTARGET_V3D -DTARGET_GB")
+  list(APPEND DEPLIBS ${CMAKE_SOURCE_DIR}/xbmc/windowing/egl/gles_init.a EGL GLESv2 nxpl nexus nxclient)
+elseif(WITH_PLATFORM STREQUAL "dags-cortexa15")
+  set(CPU cortexa15)
+  list(APPEND PLATFORM_DEFINES "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -DTARGET_STB -DTARGET_STB_EXTEND -DTARGET_V3D -DTARGET_DAGS")
+  list(APPEND DEPLIBS EGL GLESv2 nxpl nexus nxclient)
+elseif(WITH_PLATFORM STREQUAL "dreambox-cortexa15")
+  set(CPU cortexa15)
+  list(APPEND PLATFORM_DEFINES "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -DTARGET_STB -DTARGET_STB_EXTEND -DTARGET_V3D -DTARGET_DREAMBOX")
+elseif(WITH_PLATFORM STREQUAL "dreambox-mipsel")
+  list(APPEND PLATFORM_DEFINES "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -DTARGET_STB -DTARGET_STB_EXTEND -DTARGET_V3D -DTARGET_DREAMBOX")
+elseif(WITH_PLATFORM STREQUAL "vuplus-cortexa15")
+  set(CPU cortexa15)
+  list(APPEND PLATFORM_DEFINES "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -DTARGET_STB -DTARGET_STB_EXTEND -DTARGET_V3D -DTARGET_VUPLUS -DTARGET_VUPLUS_ARM")
+  list(APPEND DEPLIBS EGL GLESv2 KodiGLESPL dvb_base nxpl dvb_client)
+elseif(WITH_PLATFORM STREQUAL "vuplus-mipsel")
+  list(APPEND PLATFORM_DEFINES "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -DTARGET_STB -DTARGET_STB_EXTEND -DTARGET_V3D -DTARGET_VUPLUS -DTARGET_VUPLUS_MIPSEL")
+  list(APPEND DEPLIBS ${CMAKE_SOURCE_DIR}/xbmc/windowing/egl/gles_init.a EGL GLESv2 dvb_base nxpl xbmc_base dvb_client)
+  list(APPEND SYSTEM_LDFLAGS -L${CMAKE_SOURCE_DIR}/../xbmc-support)
+elseif(WITH_PLATFORM STREQUAL "v3d-cortexa15")
+  set(CPU cortexa15)
+  list(APPEND PLATFORM_DEFINES "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -DTARGET_STB -DTARGET_STB_EXTEND -DTARGET_V3D -DTARGET_V3DNXPL")
+  list(APPEND DEPLIBS EGL GLESv2 nxpl nexus)
+elseif(WITH_PLATFORM STREQUAL "v3d-mipsel")
+  list(APPEND PLATFORM_DEFINES "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -DTARGET_STB -DTARGET_STB_EXTEND -DTARGET_V3D -DTARGET_V3DNXPL")
+  list(APPEND DEPLIBS EGL GLESv2 nxpl nexus)
+elseif(WITH_PLATFORM STREQUAL "xcore-mipsel")
+  list(APPEND PLATFORM_DEFINES "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -DTARGET_STB -DTARGET_STB_EXTEND -DTARGET_V3D -DTARGET_XCORE")
+  list(APPEND DEPLIBS EGL GLESv2 v3dplatform)
+elseif(WITH_PLATFORM STREQUAL "nextv-cortexa15")
+  set(CPU cortexa15)
+  list(APPEND PLATFORM_DEFINES "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -DTARGET_STB -DTARGET_STB_EXTEND -DTARGET_V3D -DTARGET_NEXTV")
+  list(APPEND DEPLIBS EGL GLESv2 nxpl nexus nxclient)
+elseif(WITH_PLATFORM STREQUAL "mali-cortexa15")
+  set(CPU cortexa15)
+  list(APPEND PLATFORM_DEFINES "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -DTARGET_STB -DTARGET_STB_EXTEND -DTARGET_MALI -DHAS_HIPLAYER")
+  list(APPEND DEPLIBS EGL GLESv2 mali)
+elseif(WITH_PLATFORM STREQUAL "edision-cortexa15")
+  list(APPEND PLATFORM_DEFINES "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -DTARGET_STB -DTARGET_STB_EXTEND -DTARGET_V3D -DTARGET_EDISION")
+  list(APPEND DEPLIBS EGL GLESv2 v3dplatform)
+elseif(WITH_PLATFORM STREQUAL "clap-cortexa15")
+  list(APPEND PLATFORM_DEFINES "-DTARGET_POSIX -DTARGET_LINUX -D_LINUX -DTARGET_STB -DTARGET_MALI -DUSE_HIPLAYER")
+#  list(APPEND DEPLIBS ${CMAKE_SOURCE_DIR}xbmc/cores/hiplayer/hiplayer.a ${CMAKE_SOURCE_DIR}xbmc/linux/hisi/hiadp.a)
+#  list(APPEND DEPLIBS EGL GLESv2 jpeg hi_common hi_msp)
+  list(APPEND DEPLIBS EGL GLESv2 jpeg)
+endif()
+
+
+
+list(APPEND PLATFORM_DEFINES -DMESA_EGL_NO_X11_HEADERS)
diff --git a/cmake/scripts/linux/ArchSetup.cmake b/cmake/scripts/linux/ArchSetup.cmake
index ab14217..07f3d6a 100644
--- a/cmake/scripts/linux/ArchSetup.cmake
+++ b/cmake/scripts/linux/ArchSetup.cmake
@@ -46,6 +46,10 @@ else()
   elseif(CPU MATCHES loongarch64)
     set(ARCH loongarch64)
     set(NEON False)
+  elseif(CPU MATCHES "cortexa15")
+    set(ARCH arm)
+    set(NEON True)
+    set(NEON_FLAGS "-Wno-psabi -Wa,-march=armv7ve -mtune=cortex-a15 -mfpu=neon-vfpv4 -mvectorize-with-neon-quad -fPIC -mcpu=cortex-a15 -mfloat-abi=hard")
   else()
     message(SEND_ERROR "Unknown CPU: ${CPU}")
   endif()
diff --git a/cmake/treedata/common/stb.txt b/cmake/treedata/common/stb.txt
new file mode 100644
index 0000000..2606a0f
--- /dev/null
+++ b/cmake/treedata/common/stb.txt
@@ -0,0 +1 @@
+xbmc/windowing/egl   windowing/egl    # STB
diff --git a/system/settings/settings.xml b/system/settings/settings.xml
index 0f55917..0fc2f4a 100755
--- a/system/settings/settings.xml
+++ b/system/settings/settings.xml
@@ -597,7 +597,7 @@
           <control type="list" format="string" />
         </setting>
         <setting id="subtitles.fontname" type="string" label="14089" help="36185">
-          <level>1</level>
+          <level>3</level>
           <default>DEFAULT</default>
           <constraints>
             <options>subtitlesfonts</options>
@@ -789,7 +789,7 @@
           <control type="spinner" format="integer" delayed="true"/>
         </setting>
         <setting id="subtitles.charset" type="string" label="735" help="36189">
-          <level>1</level>
+          <level>3</level>
           <default>DEFAULT</default>
           <constraints>
             <options>charsets</options>
@@ -3180,7 +3180,7 @@
         <setting id="audiooutput.processquality" type="integer" label="13505" help="36169">
           <requirement>HAS_AE_QUALITY_LEVELS</requirement>
           <level>2</level>
-          <default>30</default> <!-- AE_QUALITY_MID -->
+          <default>20</default> <!-- AE_QUALITY_MID -->
           <constraints>
             <options>aequalitylevels</options>
           </constraints>
@@ -3198,7 +3198,7 @@
         </setting>
         <setting id="audiooutput.samplerate" type="integer" label="458" help="36523">
           <level>2</level>
-          <default>48000</default>
+          <default>44100</default>
           <dependencies>
             <dependency type="visible">
               <and>
@@ -3210,10 +3210,6 @@
           <constraints>
             <options>
               <option label="34124">44100</option>
-              <option label="34125">48000</option>
-              <option label="34126">88200</option>
-              <option label="34127">96000</option>
-              <option label="34128">192000</option>
               <option label="34129">352800</option>
               <option label="34130">384000</option>
             </options>
@@ -4034,7 +4030,7 @@
       <group id="2" label="14270">
         <setting id="locale.country" type="string" label="14271" help="36115">
           <level>0</level>
-          <default>USA (12h)</default>
+          <default>Central Europe</default>
           <constraints>
             <options>regions</options>
           </constraints>
diff --git a/tools/Linux/kodi.sh.in b/tools/Linux/kodi.sh.in
index 3d86c86..b585ea0 100644
--- a/tools/Linux/kodi.sh.in
+++ b/tools/Linux/kodi.sh.in
@@ -26,8 +26,11 @@ exec_prefix="@exec_prefix@"
 datarootdir="@datarootdir@"
 LIBDIR="@libdir@"
 APP_BINARY=$LIBDIR/${bin_name}/@APP_BINARY@
-CRASHLOG_DIR=${CRASHLOG_DIR:-$HOME}
-KODI_DATA=${KODI_DATA:-"${HOME}/.${bin_name}"} # mapped to special://home/
+#CRASHLOG_DIR=${CRASHLOG_DIR:-$HOME}
+#KODI_DATA=${KODI_DATA:-"${HOME}/.${bin_name}"} # mapped to special://home/
+
+export KODI_TEMP="/tmp/kodi"
+CRASHLOG_DIR=${CRASHLOG_DIR:-$KODI_TEMP}
 
 # Workaround for high CPU load with nvidia GFX
 export __GL_YIELD=USLEEP
@@ -35,6 +38,33 @@ export __GL_YIELD=USLEEP
 # Fix wasting RAM due to fragmentation
 export MALLOC_MMAP_THRESHOLD_=131072
 
+check_media_hdd() {
+    [ -e /proc/mounts ] || return 0
+    [ -d /media/mmc ] && export HOME="/media/mmc"
+    [ -d /media/hdd ] && export HOME="/media/hdd"
+
+    exec 9<&0 < /proc/mounts
+    while read DEV MTPT REST; do
+        case $DEV in
+            /dev/sd[a-z][0-9])
+            if [ "$MTPT" == "/media/hdd" ]; then
+                export HOME="$MTPT"
+                break
+            fi
+            ;;
+            /dev/mmcblk[0-9]p[0-9])
+            if [ "$MTPT" == "/media/mmc" ]; then
+            	export HOME="$MTPT"
+            fi
+        ;;
+        esac
+    done
+    exec 0<&9 9<&-
+}
+
+check_media_hdd
+KODI_DATA="${HOME}/.${bin_name}"
+
 # Check for some options used by this script
 while [ "$#" -gt "0" ]
 do
@@ -90,8 +120,8 @@ print_crash_report()
   uname -rvs >> $FILE
   printf " Release: " >> $FILE
   if [ -f /etc/os-release ]; then
-	  . /etc/os-release
-	  echo $NAME $VERSION >> $FILE
+    . /etc/os-release
+    echo $NAME $VERSION >> $FILE
   elif command_exists lsb_release; then
     echo >> $FILE
     lsb_release -a 2> /dev/null | sed -e 's/^/    /' >> $FILE
@@ -215,13 +245,13 @@ do
   CHILD=$!
   wait "${CHILD}"
   RET=$?
-  if [ $RET -eq 65 ]
-  then # User requested to restart app
-    LOOP=1
-  elif [ $RET -ge 131 ] && [ $RET -le 136 ] || [ $RET -eq 139 ]
-  then # Crashed with core dump
-    print_crash_report
-  fi
+#  if [ $RET -eq 65 ]
+#  then # User requested to restart app
+#    LOOP=1
+#  elif [ $RET -ge 131 ] && [ $RET -le 136 ] || [ $RET -eq 139 ]
+#  then # Crashed with core dump
+#    print_crash_report
+#  fi
 done
 
 exit $RET
diff --git a/tools/depends/target/ffmpeg/CMakeLists.txt b/tools/depends/target/ffmpeg/CMakeLists.txt
index 5cadafe..e2fdaaf 100644
--- a/tools/depends/target/ffmpeg/CMakeLists.txt
+++ b/tools/depends/target/ffmpeg/CMakeLists.txt
@@ -12,6 +12,36 @@ else()
                 )
 endif()
 
+if(FFMPEG_TARGET STREQUAL "stb")
+  set(pkgconf "PKG_CONFIG_LIBDIR=${CMAKE_BINARY_DIR}/lib/pkgconfig")
+  list(APPEND ffmpeg_conf --pkg-config=${CMAKE_BINARY_DIR}/lib/pkgconfig --pkg-config-flags=--static)
+  list(APPEND ffmpeg_conf --enable-cross-compile --arch=generic --target-os=linux)
+  list(APPEND ffmpeg_conf --pkgconfigdir=${CMAKE_BINARY_DIR}/lib/pkgconfig) 
+  list(APPEND ffmpeg_conf --bindir=${CMAKE_INSTALL_PREFIX}/ffmpeg/bin --libdir=${CMAKE_INSTALL_PREFIX}/ffmpeg/lib --incdir=${CMAKE_INSTALL_PREFIX}/ffmpeg/include --datadir=${CMAKE_INSTALL_PREFIX}/ffmpeg/share/)
+  if(WITH_PLATFORM STREQUAL "GB-cortexa15")
+    set(CPU cortex-a15)
+    list(APPEND ffmpeg_conf --cpu=${CPU})
+  elseif(WITH_PLATFORM STREQUAL "dags-cortexa15")
+    set(CPU cortex-a15)
+    list(APPEND ffmpeg_conf --cpu=${CPU})
+  elseif(WITH_PLATFORM STREQUAL "dreambox-cortexa15")
+    set(CPU cortex-a15)
+    list(APPEND ffmpeg_conf --cpu=${CPU})
+  elseif(WITH_PLATFORM STREQUAL "vuplus-cortexa15")
+    set(CPU cortex-a15)
+    list(APPEND ffmpeg_conf --cpu=${CPU})
+  elseif(WITH_PLATFORM STREQUAL "v3d-cortexa15")
+    set(CPU cortex-a15)
+    list(APPEND ffmpeg_conf --cpu=${CPU})
+  elseif(WITH_PLATFORM STREQUAL "nextv-cortexa15")
+    set(CPU cortex-a15)
+    list(APPEND ffmpeg_conf --cpu=${CPU})
+  elseif(WITH_PLATFORM STREQUAL "mali-cortexa15")
+    set(CPU cortex-a15)
+    list(APPEND ffmpeg_conf --cpu=${CPU})
+  endif()
+endif()
+
 if(CROSSCOMPILING)
   set(pkgconf "PKG_CONFIG_LIBDIR=${DEPENDS_PATH}/lib/pkgconfig")
   list(APPEND ffmpeg_conf --pkg-config=${PKG_CONFIG_EXECUTABLE}
diff --git a/tools/depends/target/libdvdcss/Makefile b/tools/depends/target/libdvdcss/Makefile
index 308661a..eac0612 100644
--- a/tools/depends/target/libdvdcss/Makefile
+++ b/tools/depends/target/libdvdcss/Makefile
@@ -3,7 +3,7 @@ include LIBDVDCSS-VERSION
 DEPS = LIBDVDCSS-VERSION Makefile ../../download-files.include
 
 ifeq ($(CROSS_COMPILING), yes)
-  DEPS += ../../Makefile.include
+#  DEPS += ../../Makefile.include
 else
   ROOT_DIR := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))
   PREFIX := $(ROOT_DIR)/dvdcss-install
@@ -20,7 +20,7 @@ else
 endif
 
 # configuration settings
-config = --prefix=$(PREFIX) --disable-shared --enable-static --with-pic
+config = --build=$(BUILD_SYS) --host=$(HOST_SYS) --prefix=$(PREFIX) --disable-shared --enable-static --with-pic
 
 include ../../download-files.include
 all: .installed-$(PLATFORM)
diff --git a/tools/depends/target/libdvdnav/Makefile b/tools/depends/target/libdvdnav/Makefile
index a43c907..1bc9baa 100644
--- a/tools/depends/target/libdvdnav/Makefile
+++ b/tools/depends/target/libdvdnav/Makefile
@@ -3,11 +3,11 @@ include LIBDVDNAV-VERSION
 DEPS = LIBDVDNAV-VERSION Makefile ../../download-files.include
 
 # configuration settings
-config = --prefix=$(PREFIX) --disable-shared --enable-static --with-pic
+config = --build=$(BUILD_SYS) --host=$(HOST_SYS) --prefix=$(PREFIX) --disable-shared --enable-static --with-pic
 EXTRA_CFLAGS = -D_XBMC -DHAVE_DVDCSS_DVDCSS_H
 
 ifeq ($(CROSS_COMPILING), yes)
-  DEPS += ../../Makefile.include
+#  DEPS += ../../Makefile.include
 else
   ROOT_DIR := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))
   PREFIX := $(ROOT_DIR)/dvdnav-install
diff --git a/tools/depends/target/libdvdread/Makefile b/tools/depends/target/libdvdread/Makefile
index ac32ac4..657de6a 100644
--- a/tools/depends/target/libdvdread/Makefile
+++ b/tools/depends/target/libdvdread/Makefile
@@ -3,11 +3,12 @@ include LIBDVDREAD-VERSION
 DEPS = LIBDVDREAD-VERSION Makefile ../../download-files.include
 
 # configuration settings
-config = --prefix=$(PREFIX) --disable-shared --enable-static --with-pic --with-libdvdcss
+#config = --prefix=$(PREFIX) --disable-shared --enable-static --with-pic --with-libdvdcss
+config = --build=$(BUILD_SYS) --host=$(HOST_SYS) --prefix=$(PREFIX) --disable-shared --enable-static --with-pic
 EXTRA_CFLAGS = -D_XBMC -DHAVE_DVDCSS_DVDCSS_H
 
 ifeq ($(CROSS_COMPILING), yes)
-  DEPS += ../../Makefile.include
+#  DEPS += ../../Makefile.include
 else
   ROOT_DIR := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))
   PREFIX := $(ROOT_DIR)/dvdread-install
diff --git a/xbmc/guilib/guiinfo/SystemGUIInfo.cpp b/xbmc/guilib/guiinfo/SystemGUIInfo.cpp
index 9d9a04b..295319e 100644
--- a/xbmc/guilib/guiinfo/SystemGUIInfo.cpp
+++ b/xbmc/guilib/guiinfo/SystemGUIInfo.cpp
@@ -62,6 +62,9 @@ std::string CSystemGUIInfo::GetSystemHeatInfo(int info) const
     {
       m_gpuInfo->GetTemperature(m_gpuTemp);
     }
+#if defined(TARGET_STB_EXTEND)
+    m_gpuTemp = m_cpuTemp;
+#endif
   }
 
   std::string text;
diff --git a/xbmc/input/InputManager.cpp b/xbmc/input/InputManager.cpp
index 26641f6..5e80e1e 100644
--- a/xbmc/input/InputManager.cpp
+++ b/xbmc/input/InputManager.cpp
@@ -607,6 +607,18 @@ bool CInputManager::HandleKey(const CKey& key)
           useKeyboard = true;
       }
     }
+#if defined(TARGET_STB)
+    switch(key.GetVKey()) {
+      case 0x0d:
+      case 0x80:
+      case 0x81:
+      case 0x82:
+      case 0x83:
+        if (iWin == WINDOW_DIALOG_KEYBOARD)
+          useKeyboard = false;
+        break;
+    }
+#endif
     if (useKeyboard)
     {
       // use the virtualkeyboard section of the keymap, and send keyboard-specific or navigation
diff --git a/xbmc/view/ViewStateSettings.cpp b/xbmc/view/ViewStateSettings.cpp
index d883393..0c557ce 100644
--- a/xbmc/view/ViewStateSettings.cpp
+++ b/xbmc/view/ViewStateSettings.cpp
@@ -114,7 +114,7 @@ bool CViewStateSettings::Load(const TiXmlNode *settings)
     if (XMLUtils::GetInt(pElement, XML_SETTINGLEVEL, settingLevel, static_cast<int>(SettingLevel::Basic), static_cast<int>(SettingLevel::Expert)))
       m_settingLevel = (SettingLevel)settingLevel;
     else
-      m_settingLevel = SettingLevel::Standard;
+      m_settingLevel = SettingLevel::Expert;
 
     const TiXmlNode* pEventLogNode = pElement->FirstChild(XML_EVENTLOG);
     if (pEventLogNode != NULL)
