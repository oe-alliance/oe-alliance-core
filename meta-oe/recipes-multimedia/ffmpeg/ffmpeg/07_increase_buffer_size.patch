From f669f70eac7a511597ad5091a4ff081491762865 Mon Sep 17 00:00:00 2001
From: captain <openatv@gmail.com>
Date: Wed, 18 May 2016 06:37:07 +0200

---
 libavformat/avio.h    |  7 -------
 libavformat/aviobuf.c | 12 +++++-------
 2 files changed, 5 insertions(+), 14 deletions(-)

diff --git a/libavformat/avio.h b/libavformat/avio.h
index 6f4ed84..a94595b 100644
--- a/libavformat/avio.h
+++ b/libavformat/avio.h
@@ -281,13 +281,6 @@ typedef struct AVIOContext {
      */
     int writeout_count;
 
-    /**
-     * Original buffer size
-     * used internally after probing and ensure seekback to reset the buffer size
-     * This field is internal to libavformat and access from outside is not allowed.
-     */
-    int orig_buffer_size;
-
     /**
      * Threshold to favor readahead over seek.
      * This is current internal only, do not use from outside.
diff --git a/libavformat/aviobuf.c b/libavformat/aviobuf.c
index ef6a0d4..6e898f5 100644
--- a/libavformat/aviobuf.c
+++ b/libavformat/aviobuf.c
@@ -33,7 +33,7 @@
 #include "url.h"
 #include <stdarg.h>
 
-#define IO_BUFFER_SIZE 32768
+#define IO_BUFFER_SIZE 262144
 
 /**
  * Do seeks within this distance ahead of the current buffer by skipping
@@ -88,7 +88,6 @@ int ffio_init_context(AVIOContext *s,
                   int64_t (*seek)(void *opaque, int64_t offset, int whence))
 {
     s->buffer      = buffer;
-    s->orig_buffer_size =
     s->buffer_size = buffer_size;
     s->buf_ptr     = buffer;
     s->opaque      = opaque;
@@ -534,16 +533,16 @@ static void fill_buffer(AVIOContext *s)
     }
 
     /* make buffer smaller in case it ended up large after probing */
-    if (s->read_packet && s->orig_buffer_size && s->buffer_size > s->orig_buffer_size) {
+    if (s->read_packet && s->buffer_size > max_buffer_size) {
         if (dst == s->buffer && s->buf_ptr != dst) {
-            int ret = ffio_set_buf_size(s, s->orig_buffer_size);
+            int ret = ffio_set_buf_size(s, max_buffer_size);
             if (ret < 0)
                 av_log(s, AV_LOG_WARNING, "Failed to decrease buffer size\n");
 
             s->checksum_ptr = dst = s->buffer;
         }
-        av_assert0(len >= s->orig_buffer_size);
-        len = s->orig_buffer_size;
+        av_assert0(len >= max_buffer_size);
+        len = max_buffer_size;
     }
 
     if (s->read_packet)
@@ -985,7 +984,6 @@ int ffio_set_buf_size(AVIOContext *s, int buf_size)
 
     av_free(s->buffer);
     s->buffer = buffer;
-    s->orig_buffer_size =
     s->buffer_size = buf_size;
     s->buf_ptr = s->buf_ptr_max = buffer;
     url_resetbuf(s, s->write_flag ? AVIO_FLAG_WRITE : AVIO_FLAG_READ);
