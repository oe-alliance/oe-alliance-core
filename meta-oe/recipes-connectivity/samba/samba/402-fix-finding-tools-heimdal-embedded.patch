diff --git a/wscript_configure_embedded_heimdal b/wscript_configure_embedded_heimdal
index 6066f2b..e92caba 100644
--- a/wscript_configure_embedded_heimdal
+++ b/wscript_configure_embedded_heimdal
@@ -6,3 +6,14 @@ if not conf.env['BISON']:
 
 conf.define('USING_EMBEDDED_HEIMDAL', 1)
 conf.RECURSE('third_party/heimdal_build')
+
+def check_system_heimdal_binary(name):
+    if conf.LIB_MAY_BE_BUNDLED(name):
+        return False
+    if not conf.find_program(name, var=name.upper()):
+        return False
+    conf.define('USING_SYSTEM_%s' % name.upper(), 1)
+    return True
+
+check_system_heimdal_binary("compile_et")
+check_system_heimdal_binary("asn1_compile")
diff --git a/wscript_configure_system_heimdal b/wscript_configure_system_heimdal
index 5dbb5e4..68f707b 100644
--- a/wscript_configure_system_heimdal
+++ b/wscript_configure_system_heimdal
@@ -27,14 +27,6 @@ if krb5_config:
 def check_system_heimdal_lib(name, functions='', headers=''):
     # Only use system library if the user requested the bundled one not be
     # used.
-    if conf.LIB_MAY_BE_BUNDLED(name):
-        return False
-    setattr(conf.env, "CPPPATH_%s" % name.upper(), heimdal_includedirs)
-    setattr(conf.env, "LIBPATH_%s" % name.upper(), heimdal_libdirs)
-    if not conf.CHECK_FUNCS_IN(functions, name, headers=headers, empty_decl=False, set_target=True):
-        return False
-    conf.define('USING_SYSTEM_%s' % name.upper(), 1)
-    return True
 
 check_system_heimdal_lib("com_err", "com_right_r com_err", "com_err.h")
 
