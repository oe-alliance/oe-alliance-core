--- a/sysdeps/unix/sysv/linux/signalfd.c	2015-03-28 20:03:15.410816663 +0100
+++ b/sysdeps/unix/sysv/linux/signalfd.c	2015-03-28 20:32:51.374786227 +0100
@@ -25,15 +25,6 @@
 int
 signalfd (int fd, const sigset_t *mask, int flags)
 {
-#ifdef __NR_signalfd4
-  int res = INLINE_SYSCALL (signalfd4, 4, fd, mask, _NSIG / 8, flags);
-# ifndef __ASSUME_SIGNALFD4
-  if (res != -1 || errno != ENOSYS)
-# endif
-    return res;
-#endif
-
-#ifndef __ASSUME_SIGNALFD4
   /* The old system call has no flag parameter which is bad.  So we have
      to wait until we have to support to pass additional values to the
      kernel (sys_indirect) before implementing setting flags like
@@ -44,13 +35,7 @@
       return -1;
     }
 
-# ifdef __NR_signalfd
-  return INLINE_SYSCALL (signalfd, 3, fd, mask, _NSIG / 8);
-# else
   __set_errno (ENOSYS);
   return -1;
-# endif
-#elif !defined __NR_signalfd4
-# error "__ASSUME_SIGNALFD4 defined but not __NR_signalfd4"
-#endif
+
 }
--- a/sysdeps/unix/sysv/linux/eventfd.c	2015-03-28 19:59:56.354820074 +0100
+++ b/sysdeps/unix/sysv/linux/eventfd.c	2015-03-28 20:32:17.102786815 +0100
@@ -24,15 +24,7 @@
 int
 eventfd (unsigned int count, int flags)
 {
-#ifdef __NR_eventfd2
-  int res = INLINE_SYSCALL (eventfd2, 2, count, flags);
-# ifndef __ASSUME_EVENTFD2
-  if (res != -1 || errno != ENOSYS)
-# endif
-    return res;
-#endif
 
-#ifndef __ASSUME_EVENTFD2
   /* The old system call has no flag parameter which is bad.  So we have
      to wait until we have to support to pass additional values to the
      kernel (sys_indirect) before implementing setting flags like
@@ -43,13 +35,7 @@
       return -1;
     }
 
-# ifdef __NR_eventfd
-  return INLINE_SYSCALL (eventfd, 1, count);
-# else
   __set_errno (ENOSYS);
   return -1;
-# endif
-#elif !defined __NR_eventfd2
-# error "__ASSUME_EVENTFD2 defined but not __NR_eventfd2"
-#endif
+
 }
