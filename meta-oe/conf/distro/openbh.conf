#@TYPE: Distribution
#@NAME: OpenBH
#@DESCRIPTION: Embedded Linux Distribution Configuration for STB's

DISTRO_FEATURES_BACKFILL_CONSIDERED += "pulseaudio gobject-introspection-data"

DISTRO_NAME ?= "openbh"
DISTRO_VERSION = "1.2"
BUILD_VERSION = "000"
DEVELOPER_BUILD_VERSION = "000"
BB_HASH_IGNORE_MISMATCH = "1"
DEFAULT_TIMEZONE = "Europe/London"

# default Enigma2 skin.
E2DEFAULTSKIN = "enigma2-plugin-skins-blackshadowsep"

ENIGMA2_URI ?= "${@bb.utils.contains("DISTRO_TYPE", "release", "git://github.com/BlackHole/enigma2.git;protocol=git" , "git://github.com/BlackHole/enigma2.git;protocol=git;branch=master", d)}"
ENIGMA2_SKINS_URI ?= "git://github.com/OpenViX/enigma2-skins.git;protocol=git"
# ENIGMA2_PLUGINS_URI = "git://github.com/oe-alliance/enigma2-plugins.git;protocol=git;branch=master"

IPKG_VARIANT = "opkg"

FEED_NAME ?= "${DISTRO_NAME}-${DISTRO_VERSION}"
DISTRO_FEED_URI ?= "${@bb.utils.contains("DISTRO_TYPE", "release", "http://feeds.vuplus-community.net/${DISTRO_NAME}/${DISTRO_VERSION}/${MACHINE}" , "http://feeds.vuplus-community.net/${DISTRO_NAME}/${DISTRO_TYPE}/${DISTRO_VERSION}/${MACHINE}", d)}"
DISTRO_FEED_PREFIX ?= "${DISTRO_NAME}"

IMAGE_VERSION = "${DISTRO_VERSION}"
IMAGE_NAME = "${@bb.utils.contains("DISTRO_TYPE", "release", "${DISTRO_NAME}-${IMAGE_VERSION}.${BUILD_VERSION}.${DISTRO_TYPE}-${MACHINEBUILD}", "${DISTRO_NAME}-${IMAGE_VERSION}.${BUILD_VERSION}.${DEVELOPER_BUILD_VERSION}.${DISTRO_TYPE}-${MACHINEBUILD}", d)}"
IMAGE_VER_STRING = "${DISTRO_NAME}-${IMAGE_VERSION}.${BUILD_VERSION}.${DISTRO_TYPE}-${MACHINEBUILD}"
IMAGE_ROOTFS = "${TMPDIR}/rootfs"
IMAGE_LINK_NAME = ""
DEPLOY_DIR ?= "${TMPDIR}/deploy"

# for compatibility with rm_old_work.bbclass
WORKDIR = "${TMPDIR}/work/${MULTIMACH_TARGET_SYS}/${PN}/${PF}"

#USER_CLASSES += "image-prelink"
# SANITY_REQUIRED_UTILITIES = "patch diffstat texi2html makeinfo svn bzip2 tar gzip gawk chrpath wget cpio sshpass"
# INHERIT += "buildhistory recipe_sanity testlab"
# BUILDHISTORY_COMMIT = "1"

require conf/distro/include/unstable-versions.inc

VIRTUAL-RUNTIME_dev_manager = "busybox-mdev"
VIRTUAL-RUNTIME_login_manager = "busybox"
VIRTUAL-RUNTIME_init_manager = "sysvinit"
VIRTUAL-RUNTIME_initscripts = "initscripts"

PREFERRED_PROVIDERS += "virtual/${TARGET_PREFIX}gcc-initial:gcc-cross-initial"
PREFERRED_PROVIDERS += "virtual/${TARGET_PREFIX}gcc-intermediate:gcc-cross-intermediate"
PREFERRED_PROVIDERS += "virtual/${TARGET_PREFIX}gcc:gcc-cross"
PREFERRED_PROVIDERS += "virtual/${TARGET_PREFIX}g++:gcc-cross"

# OE optimization defaults to -O2 which makes for much larger binaries.
# Override here to use -Os instead, resulting in smaller images.
FULL_OPTIMIZATION = "-Os -pipe ${DEBUG_FLAGS}"
# build some core libs with better compiler optimization for better performance
O3_OPT = "-O3 -pipe ${DEBUG_FLAGS}"
FULL_OPTIMIZATION_pn-flac = "${O3_OPT}"
FULL_OPTIMIZATION_pn-jpeg = "${O3_OPT}"
FULL_OPTIMIZATION_pn-lame = "${O3_OPT}"
FULL_OPTIMIZATION_pn-liba52 = "${O3_OPT}"
FULL_OPTIMIZATION_pn-libdca = "${O3_OPT}"
FULL_OPTIMIZATION_pn-libgcrypt = "${O3_OPT}"
FULL_OPTIMIZATION_pn-libmad = "${O3_OPT}"
FULL_OPTIMIZATION_pn-libogg = "${O3_OPT}"
FULL_OPTIMIZATION_pn-libpng = "${O3_OPT}"
FULL_OPTIMIZATION_pn-libsamplerate = "${O3_OPT}"
FULL_OPTIMIZATION_pn-libvorbis = "${O3_OPT}"
FULL_OPTIMIZATION_pn-tremor = "${O3_OPT}"
FULL_OPTIMIZATION_pn-zlib = "${O3_OPT}"

PYTHON_BASEVERSION ?= "2.7"
PREFERRED_VERSION_python ?= "2.7.14"
PREFERRED_VERSION_python-native ?= "2.7.14"

# Force the older version of liberation-fonts until we fix the fontforge issue
PREFERRED_VERSION_liberation-fonts ?= "1.04"

PREFERRED_VERSION_netatalk ?= "2.2.3"

DISTRO_FEATURES = "bluez5 directfb gtk-directfb pulseaudio alsa argp bluetooth ext2 irda largefile mplt pcmcia wifi wifi-extra xattr nfs appletalk smbfs zeroconf pci ${DISTRO_FEATURES_LIBC} pam"

QA_LOG = "1"
QA_LOGFILE = "${TMPDIR}/qa.log"

OEINCLUDELOGS ?= "yes"
KERNEL_CONSOLE ?= "ttyS0,115200n8"

BB_GENERATE_MIRROR_TARBALLS ??= "0"

NO32LIBS ??= "1"

# Missing checksums should raise an error
BB_STRICT_CHECKSUM = "0"

TCLIBCAPPEND = ""

# Drop unused PACKAGE_EXTRA_ARCHS
PACKAGE_EXTRA_ARCHS = "${TUNE_PKGARCH} ${OEM_ARCH}"

# add support for extra feeds
PACKAGE_ARCHS += " 3rdparty ${MACHINE}_3rdparty private"

LICENSE_FLAGS_WHITELIST = "commercial_gst-plugins-ugly commercial_lame commercial_libmad commercial_mpeg2dec commercial_ffmpeg commercial_libav commercial_x264 commercial_gstreamer1.0-libav commercial_gstreamer1.0-plugins-ugly commercial_mpg123"
COMMERCIAL_AUDIO_PLUGINS ?= "gst-plugins-ugly-mad gst-plugins-ugly-mpegaudioparse gstreamer1.0-plugins-ugly-mad"
COMMERCIAL_VIDEO_PLUGINS ?= "gst-plugins-ugly-mpeg2dec gst-plugins-ugly-mpegstream gst-plugins-bad-mpegvideoparse gstreamer1.0-plugins-ugly-mpeg2dec"
