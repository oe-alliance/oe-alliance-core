#@TYPE: Distribution
#@NAME: Open Vision
#@DESCRIPTION: Embedded Linux Distribution Configuration for STB's

DISTRO_FEATURES_BACKFILL_CONSIDERED += "pulseaudio gobject-introspection-data"

OE_TERMINAL ?= "auto"
DISTRO_NAME = "openvision"
DISPLAY_DISTRO  = "Open Vision"
DISTRO_VERSION = "12.1"
DISTRO_TYPE ?= "release"
BUILD_VERSION = "${DATE}"
BUILD_VERSION[vardepsexclude] += "DATE"
BB_HASH_IGNORE_MISMATCH = "1"
DEFAULT_TIMEZONE = "Europe/London"

# default Enigma2 skin.
#E2DEFAULTSKIN = "enigma2-plugin-skins-smartlitesd"

ENIGMA2_URI = "${@bb.utils.contains("TARGET_ARCH", "sh4", "git://github.com/OpenVisionE2/enigma2-openvision-sh4.git;protocol=https;branch=develop", "git://github.com/OpenVisionE2/enigma2-openvision.git;protocol=https;branch=develop", d)}"

IPKG_VARIANT = "opkg"

FEED_NAME ?= "${DISTRO_NAME}-${DISTRO_VERSION}"
DISTRO_FEED_URI = "https://feeds.openvision.tech/${DISTRO_VERSION}/Vision/${MACHINE}"
DISTRO_FEED_PREFIX ?= "openvision"

IMAGE_VERSION = "unofficial"

IMAGE_NAME = "${DISTRO_NAME}-${IMAGE_VERSION}-${MACHINEBUILD}-${DATE}"
IMAGE_NAME[vardepsexclude] += "DATE"
IMAGE_ROOTFS = "${TMPDIR}/rootfs/${MACHINE}"
IMAGE_LINK_NAME = ""
CACHE ?= "${TMPDIR}/cache/${LIBC}/${MACHINE}"
DEPLOY_DIR ?= "${TMPDIR}/deploy/${LIBC}"
DEPLOY_DIR_IMAGE = "${DEPLOY_DIR}/images/${MACHINE}"

#USER_CLASSES += "image-prelink"
# SANITY_REQUIRED_UTILITIES = "patch diffstat texi2html makeinfo svn bzip2 tar gzip gawk chrpath wget cpio sshpass"
# INHERIT += "buildhistory recipe_sanity testlab"
# BUILDHISTORY_COMMIT = "1"

require conf/distro/include/unstable-versions.inc

VIRTUAL-RUNTIME_dev_manager = "busybox-mdev"
VIRTUAL-RUNTIME_login_manager = "busybox"
VIRTUAL-RUNTIME_init_manager = "sysvinit"
VIRTUAL-RUNTIME_initscripts = "initscripts"

# OE optimization defaults to -O2 which makes for much larger binaries.
# Override here to use -Os instead, resulting in smaller images.
FULL_OPTIMIZATION = "-Os -pipe ${DEBUG_FLAGS}"
# build some core libs with better compiler optimization for better performance
O3_OPT = "-O3 -pipe ${DEBUG_FLAGS}"
FULL_OPTIMIZATION:pn-flac = "${O3_OPT}"
FULL_OPTIMIZATION:pn-jpeg = "${O3_OPT}"
FULL_OPTIMIZATION:pn-lame = "${O3_OPT}"
FULL_OPTIMIZATION:pn-liba52 = "${O3_OPT}"
FULL_OPTIMIZATION:pn-libdca = "${O3_OPT}"
FULL_OPTIMIZATION:pn-libgcrypt = "${O3_OPT}"
FULL_OPTIMIZATION:pn-libmad = "${O3_OPT}"
FULL_OPTIMIZATION:pn-libogg = "${O3_OPT}"
FULL_OPTIMIZATION:pn-libpng = "${O3_OPT}"
FULL_OPTIMIZATION:pn-libsamplerate = "${O3_OPT}"
FULL_OPTIMIZATION:pn-libvorbis = "${O3_OPT}"
FULL_OPTIMIZATION:pn-tremor = "${O3_OPT}"
FULL_OPTIMIZATION:pn-zlib = "${O3_OPT}"

# Use upx to compress some binaries for boxes with up to this flash-size (Must be a power of 2 larger or equal 64):
COMPRESS_UPTO = "128"

PREFERRED_VERSION_netatalk ?= "2.2.3"

DISTRO_FEATURES = "${DISTRO_FEATURES_EXTRA} bluez5 directfb gtk-directfb pulseaudio alsa argp bluetooth ext2 ipv4 ipv6 irda largefile ldconfig mplt pcmcia wifi wifi-extra xattr nfs smbfs zeroconf pci pam tuxtxtfhd \
                ${@bb.utils.contains("DEFAULTTUNE", "sh4", " ", "ld-is-gold", d)}"

QA_LOG = "1"
QA_LOGFILE = "${TMPDIR}/qa.log"

OEINCLUDELOGS ?= "yes"
KERNEL_CONSOLE ?= "ttyS0,115200n8"

BB_GENERATE_MIRROR_TARBALLS ??= "0"

NO32LIBS ??= "1"

# Missing checksums should raise an error
BB_STRICT_CHECKSUM = "0"

TCLIBCAPPEND = ""

# Drop unused PACKAGE_EXTRA_ARCHS
PACKAGE_EXTRA_ARCHS = "${TUNE_PKGARCH} ${OEM_ARCH}"

# add support for extra feeds
PACKAGE_ARCHS += " 3rdparty ${MACHINE}_3rdparty private"

LICENSE_FLAGS_ACCEPTED = "commercial"
COMMERCIAL_AUDIO_PLUGINS ?= "gstreamer1.0-plugins-ugly-mad"
COMMERCIAL_VIDEO_PLUGINS ?= "gstreamer1.0-plugins-ugly-mpeg2dec"

INHERIT += "rm-pycache"
