#@TYPE: Machine
#@NAME: XCORE XC7362
#@DESCRIPTION: Machine configuration for the XCORE XC7362

KERNEL_IMAGETYPE = "vmlinux"
PREFERRED_VERSION_linux-xcore = "4.3"
PREFERRED_VERSION_linux-libc-headers = "4.3"

CHIPSET = "bcm7362"

UBI_VOLNAME = "rootfs"
MKUBIFS_ARGS = "-m 2048 -e 126976 -c 4096 -F"
UBINIZE_ARGS = "-m 2048 -p 128KiB"

require conf/machine/include/xcore-oem.inc

MACHINE_FEATURES += "videoenhancement inibt blindscan-dvbs blindscan-dvbc directfb sdl textlcd dvb-c skins1080 \
    ${@base_contains('MACHINEBUILD', 'spycat', 'ci' , '', d)} \
"

### 8723BS wireless/bluetooth ###
KERNEL_MODULE_AUTOLOAD += "r8723bs" 
KERNEL_MODULE_AUTOLOAD += "hci_uart" 

MACHINE_ESSENTIAL_EXTRA_RRECOMMENDS += " \
    kernel-module-hci-uart \
    "

MACHINE_EXTRA_RRECOMMENDS += " \
    firmware-rtl8723b \
    bluez-hcitools \
    "

EXTRA_IMAGEDEPENDS += "\
    ${@base_contains('MACHINEBUILD', 'osmini', 'enigma2-plugin-systemplugins-vfdcontrol' , '', d)} \
    ${@base_contains('MACHINEBUILD', 'spycatmini', 'enigma2-plugin-systemplugins-vfdcontrol' , '', d)} \
    "

MACHINE_EXTRA_RDEPENDS = "\
    ${@base_contains('MACHINEBUILD', 'osmini', 'enigma2-plugin-systemplugins-vfdcontrol' , '', d)} \
    ${@base_contains('MACHINEBUILD', 'spycatmini', 'enigma2-plugin-systemplugins-vfdcontrol' , '', d)} \
    "

IMAGE_CMD_ubi_append = "\
    mkdir -p ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}; \
    cp ${DEPLOY_DIR_IMAGE}/splash.bin ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}/splash.bin; \
    mv ${DEPLOY_DIR_IMAGE}/${IMAGE_NAME}.rootfs.ubi ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}/${ROOTFS_FILE}; \
    gzip -9c ${DEPLOY_DIR_IMAGE}/vmlinux-${MACHINE}.bin > ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}/${KERNEL_FILE}; \
    echo ${IMAGE_VER_STRING} > ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}/imageversion; \
    echo "rename this file to 'force' to force an update without confirmation" > ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}/noforce; \
    cd ${DEPLOY_DIR_IMAGE}; \
    zip ${IMAGE_NAME}_usb.zip ${IMAGEDIR}/*; \
    rm -f ${DEPLOY_DIR_IMAGE}/*.ubi; \
    rm -f ${DEPLOY_DIR_IMAGE}/*.ubifs; \
    rm -f ${DEPLOY_DIR_IMAGE}/*.manifest; \
    rm -f ${DEPLOY_DIR_IMAGE}/.ubifs; \
    rm -f ${DEPLOY_DIR_IMAGE}/.manifest; \
    rm -Rf ${IMAGEDIR}; \
    "