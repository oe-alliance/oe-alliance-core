From b6e93db5820df8afe7a10f569aa26d4f391361cd Mon Sep 17 00:00:00 2001
From: Armin Kuster <akuster@mvista.com>
Date: Thu, 14 Jul 2016 07:56:05 -0700
Subject: [PATCH] add odroid funnkyness

Signed-off-by: Armin Kuster <akuster@mvista.com>
---
 Makefile                   |  47 ++++++++++++++++++++++++++++++++++++++++++++-
 8 files changed, 91 insertions(+), 1 deletion(-)

diff --git a/Makefile b/Makefile
index 09a18e1..fb3922e 100644
--- a/Makefile
+++ b/Makefile
@@ -730,7 +730,7 @@ endif
 
 # Always append ALL so that arch config.mk's can add custom ones
 ALL-y += u-boot.srec u-boot.bin u-boot.sym System.map u-boot.cfg binary_size_check
-
+ALL-y += fip.bin boot.bin
 ALL-$(CONFIG_ONENAND_U_BOOT) += u-boot-onenand.bin
 ifeq ($(CONFIG_SPL_FSL_PBL),y)
 ALL-$(CONFIG_RAMBOOT_PBL) += u-boot-with-spl-pbl.bin
@@ -1096,6 +1096,51 @@ u-boot-dtb-tegra.bin: u-boot-tegra.bin FORCE
 	$(call if_changed,copy)
 endif
 
+#define CONFIG_NEED_BL301               1
+FUSING_FOLDER := $(srctree)/sd_fuse
+FIP_FOLDER := $(srctree)/fip
+FIP_FOLDER_SOC := $(FIP_FOLDER)/gxb
+FIP_ARGS += --bl30 $(FIP_FOLDER_SOC)/bl30.bin
+#ifeq ($(CONFIG_NEED_BL301), 1)
+FIP_ARGS += --bl301 $(FIP_FOLDER_SOC)/bl301.bin
+#endif
+FIP_ARGS += --bl31 $(FIP_FOLDER_SOC)/bl31.bin
+ifeq ($(CONFIG_NEED_BL32), 1)
+FIP_ARGS += --bl32 $(FIP_FOLDER_SOC)/bl32.bin
+endif
+FIP_ARGS += --bl33 $(FIP_FOLDER_SOC)/bl33.bin
+
+.PHONY: fip_create
+fip_create:
+	$(Q)$(MAKE) -C $(srctree)/tools/fip_create/
+	$(Q)cp $(srctree)/tools/fip_create/fip_create $(FIP_FOLDER)/
+
+.PHONY: fip.bin
+fip.bin: tools prepare u-boot.bin 
+	$(Q)cp u-boot.bin $(FIP_FOLDER_SOC)/bl33.bin
+	$(Q)fip_create ${FIP_ARGS} $(FIP_FOLDER_SOC)/fip.bin
+	$(Q)fip_create --dump $(FIP_FOLDER_SOC)/fip.bin
+
+.PHONY : boot.bin
+boot.bin: fip.bin
+	$(Q)cat $(FIP_FOLDER_SOC)/bl2.package  $(FIP_FOLDER_SOC)/fip.bin > $(FIP_FOLDER_SOC)/boot_new.bin
+	$(Q)$(FIP_FOLDER_SOC)/aml_encrypt_gxb --bootsig --input $(FIP_FOLDER_SOC)/boot_new.bin --output $(FIP_FOLDER_SOC)/u-boot.bin
+ifeq ($(CONFIG_AML_CRYPTO_UBOOT), y)
+	$(Q)$(FIP_FOLDER_SOC)/aml_encrypt_$(SOC) --bootsig --input $(FIP_FOLDER_SOC)/boot_new.bin --amluserkey $(srctree)/board/$(BOARDDIR)/aml-user-key.sig --aeskey enable --output $(FIP_FOLDER_SOC)/u-boot.bin.encrypt
+endif
+ifeq ($(CONFIG_AML_CRYPTO_IMG), y)
+	$(Q)$(FIP_FOLDER_SOC)/aml_encrypt_$(SOC) --imgsig --input $(srctree)/board/$(BOARDDIR)/boot.img --amluserkey $(srctree)/board/$(BOARDDIR)/aml-user-key.sig --output $(FIP_FOLDER_SOC)/boot.img.encrypt
+	@cp -f $(FIP_FOLDER_SOC)/boot.img.encrypt $(FIP_FOLDER)/boot.img.encrypt
+endif
+	@cp -f $(FIP_FOLDER_SOC)/u-boot.* $(FIP_FOLDER)/
+	$(Q)dd if=$(FIP_FOLDER)/u-boot.bin of=$(FUSING_FOLDER)/u-boot.bin bs=512 skip=96
+	@rm -f $(FIP_FOLDER_SOC)/boot_new.bin
+	@dd if=$(FUSING_FOLDER)/bl1.bin.hardkernel of=$(srctree)/u-boot.bin conv=fsync
+	@dd if=$(FUSING_FOLDER)/bl1.bin.hardkernel of=$(srctree)/u-boot.bin conv=fsync,notrunc bs=512 skip=1 seek=1
+	@dd if=$(FUSING_FOLDER)/u-boot.bin of=$(srctree)/u-boot.bin conv=fsync,notrunc bs=512 seek=97
+	@echo '$(FIP_FOLDER_SOC)/u-boot.bin build done!'
+
+
 OBJCOPYFLAGS_u-boot-app.efi := $(OBJCOPYFLAGS_EFI)
 u-boot-app.efi: u-boot FORCE
 	$(call if_changed,zobjcopy)

