diff --git a/frontends/spark_dvbapi5/stv090x.c b/frontends/spark_dvbapi5/stv090x.c
index 94dfffe..8550272 100644
--- a/frontends/spark_dvbapi5/stv090x.c
+++ b/frontends/spark_dvbapi5/stv090x.c
@@ -5075,6 +5075,58 @@ static enum dvbfe_search stv090x_search(struct dvb_frontend *fe, struct dvbfe_pa
 	return DVBFE_ALGO_SEARCH_ERROR;
 }
 #else
+
+static int stv090x_set_pls(struct stv090x_state *state, u8 pls_mode, u32 pls_code)
+{
+	if (pls_mode == 0 && pls_code == 0)
+		pls_code = 1;
+	pls_mode &= 0x03;
+	pls_code &= 0x3FFFF;
+
+	dprintk(1, "Set PLS code %d (mode %d)", pls_code, pls_mode);
+	if (STV090x_WRITE_DEMOD(state, PLROOT2, (pls_mode<<2) | (pls_code>>16)) < 0)
+		goto err;
+	if (STV090x_WRITE_DEMOD(state, PLROOT1, pls_code>>8) < 0)
+		goto err;
+	if (STV090x_WRITE_DEMOD(state, PLROOT0, pls_code) < 0)
+		goto err;
+	return 0;
+err:
+	dprintk(1, "I/O error");
+	return -1;
+}
+
+#define NO_STREAM_ID_FILTER	(~0U)
+
+static int stv090x_set_mis(struct stv090x_state *state, int mis)
+{
+	u32 reg;
+
+	if (mis == NO_STREAM_ID_FILTER) {
+		dprintk(1, "Disable MIS filtering");
+		stv090x_set_pls(state, 0, 0);
+		reg = STV090x_READ_DEMOD(state, PDELCTRL1);
+		STV090x_SETFIELD_Px(reg, FILTER_EN_FIELD, 0x00);
+		if (STV090x_WRITE_DEMOD(state, PDELCTRL1, reg) < 0)
+			goto err;
+	} else {
+		dprintk(1, "Enable MIS filtering - %d", mis);
+		stv090x_set_pls(state, (mis>>26) & 0x3, (mis>>8) & 0x3FFFF);
+		reg = STV090x_READ_DEMOD(state, PDELCTRL1);
+		STV090x_SETFIELD_Px(reg, FILTER_EN_FIELD, 0x01);
+		if (STV090x_WRITE_DEMOD(state, PDELCTRL1, reg) < 0)
+			goto err;
+		if (STV090x_WRITE_DEMOD(state, ISIENTRY, mis) < 0)
+			goto err;
+		if (STV090x_WRITE_DEMOD(state, ISIBITENA, 0xff) < 0)
+			goto err;
+	}
+	return 0;
+err:
+	dprintk(1, "I/O error");
+	return -1;
+}
+
 static enum dvbfe_search stv090x_search(struct dvb_frontend *fe, struct dvb_frontend_parameters *p)
 {
 	struct stv090x_state *state = fe->demodulator_priv;
@@ -5100,6 +5152,8 @@ static enum dvbfe_search stv090x_search(struct dvb_frontend *fe, struct dvb_fron
 		state->search_range = 5000000;
 	}
 
+	stv090x_set_mis(state, props->stream_id);
+
 	if (stv090x_algo(state) == STV090x_RANGEOK)
 	{
 		dprintk(1, "Search success!");
@@ -6622,10 +6676,21 @@ struct dvb_frontend *stv090x_attach(const struct stv090x_config *config,
 		goto error;
 	}
 
-	dprintk(10, "Attaching %s demodulator(%d) Cut=0x%02x\n",
-		state->device == STV0900 ? "STV0900" : "STV0903",
-		demod,
-		state->dev_ver);
+        if (state->device == STX7111) {
+                state->frontend.ops.info.caps |= FE_CAN_MULTISTREAM;
+                dprintk(10, "Attaching %s demodulator(%d) Cut=0x%02x\n",
+                        "STV090x(STX711x)",
+                        demod,
+                        state->dev_ver);
+        }
+        else {
+                if (state->dev_ver>=0x30)
+                    state->frontend.ops.info.caps |= FE_CAN_MULTISTREAM;
+                dprintk(10, "Attaching %s demodulator(%d) Cut=0x%02x\n",
+                        state->device == STV0900 ? "STV0900" : "STV0903",
+                        demod,
+                        state->dev_ver);
+        }
 
 	return &state->frontend;
 
