#@TYPE: Machine
#@NAME: Dreambox DM520
#@DESCRIPTION: Machine configuration for the Dreambox DM520

MACHINE_NAME = "DM520"
RCNAME = "dmm2"

FLASHSIZE = "512"

PREFERRED_PROVIDER_virtual/egl ?= "libvc5dream"
PREFERRED_PROVIDER_virtual/libgl ?= "mesa-gl"
PREFERRED_PROVIDER_virtual/libgles1 ?= "libvc5dream"
PREFERRED_PROVIDER_virtual/libgles2 ?= "libvc5dream"
PREFERRED_PROVIDER_virtual/mesa ?= "mesa-gl"

MACHINE_FEATURES += "ci dvb-c blindscan-dvbc hdmicec dvd libpassthrough usbconsole dreamboxv2 recovery HDMI oem-info"

SOC_FAMILY = "bcm73625"

MTD_KERNEL = "mtd2"
MTD_ROOTFS = "mtd0"
KERNEL_FILE = "kernel.bin"
ROOTFS_FILE = "rootfs.bin"

UBI_VOLNAME = "dreambox-rootfs"
MKUBIFS_ARGS = "-m 2048 -e 126976 -c 4008"
UBINIZE_ARGS = "-m 2048 -p 128KiB"

PREFERRED_VERSION_linux-dreambox = "3.4"

DISTRO_FEATURES_GFX:mipsel ?= " opengl"

PACKAGECONFIG:pn-glmark2 = "gles2"

PACKAGECONFIG:pn-cogl-1.0 = "egl-kms egl-null \
        ${@bb.utils.contains('DISTRO_FEATURES', 'opengl', 'gles2', '', d)}"

PACKAGECONFIG:pn-weston = "${@bb.utils.contains('DISTRO_FEATURES', 'opengl', 'gles', '', d)}"

DREAMBOX_IMAGE_SIZE ??= "1024"

IMAGE_FSTYPES = "tar.xz ubi"

require conf/machine/include/dreambox-mips32el.inc

IMAGE_CMD:tar:prepend = "\
	mkdir -p ${IMAGE_ROOTFS}/tmp; \
	mkdir -p ${IMAGE_ROOTFS}/var/lib/opkg/info; \
	echo "#!/bin/sh" > ${IMAGE_ROOTFS}/var/lib/opkg/info/dreambox-secondstage.postinst; \
	echo "[ -n \"$D\" ] || flash-ssbl /usr/share/dreambox-secondstage/ssbl.bin" >> ${IMAGE_ROOTFS}/var/lib/opkg/info/dreambox-secondstage.postinst; \
	chmod 777 ${IMAGE_ROOTFS}/var/lib/opkg/info/dreambox-secondstage.postinst; \
	rm -Rf ${DEPLOY_DIR_IMAGE}/*.rootfs.ubifs; \
	rm -Rf ${DEPLOY_DIR_IMAGE}/*.rootfs.tar.xz; \
	"

CONVERSION_CMD:xz:append = ";\
	cd ${DEPLOY_DIR_IMAGE}; \
	mv ${IMGDEPLOYDIR}/${IMAGE_NAME}.rootfs.tar.xz ${DEPLOY_DIR_IMAGE}/${IMAGE_NAME}.rootfs.tar.xz; \
	echo ${DISTRO_NAME}-${DISTRO_VERSION}.${BUILD_VERSION} > ${DEPLOY_DIR_IMAGE}/imageversion; \
	echo "Image for WebBrower Update" >> ${DEPLOY_DIR_IMAGE}/imageversion; \
	zip ${IMAGE_NAME}_web.zip ${IMAGE_NAME}.rootfs.tar.xz imageversion; \
	cd ${IMGDEPLOYDIR}; \
"

IMAGE_CMD:ubi:append = "\
	cd ${DEPLOY_DIR_IMAGE}; \
	mkdir -p ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}; \
	mv ${IMGDEPLOYDIR}/${IMAGE_NAME}.rootfs.ubi ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}/${ROOTFS_FILE}; \
	cp ${DEPLOY_DIR_IMAGE}/vmlinux.gz ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}/${KERNEL_FILE}; \
	echo ${DISTRO_NAME}-${DISTRO_VERSION}.${BUILD_VERSION} > ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}/imageversion; \
	echo "Flash Online Image" >> ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}/imageversion; \
	zip ${IMAGE_NAME}_flash.zip ${IMAGEDIR}/*; \
	rm -Rf ${IMAGEDIR}; \
	"
