#@TYPE: Machine
#@NAME: Dreambox DREAMBOX ONE
#@DESCRIPTION: Machine configuration for the Dreambox DREAMBOX ONE

MACHINE_NAME = "dreamone"
RCNAME = "dmm3"

BOARD = "one"
MTD_ROOTFS = "mmcblk0p7"
MTD_KERNEL = "mmcblk0p6"
KERNEL_FILE = "kernel.bin"
ROOTFS_FILE = "rootfs-${BOARD}.tar.bz2"
MTD_BLACK  = "mmcblk0"

SOC_FAMILY = "meson64"

PREFERRED_PROVIDER_virtual/egl ?= "meson-mali"
PREFERRED_PROVIDER_virtual/libgles2 ?= "meson-mali"
PREFERRED_PROVIDER_virtual/libgl ?= "mesa-gl"
PREFERRED_PROVIDER_virtual/mesa ?= "mesa-gl"

SERIAL_CONSOLES = "1000000;ttyS0"
UBOOT_ENTRYPOINT = "0x1080000"
UBOOT_MACHINE = "dreamone_defconfig"

KERNEL_CLASSES = "kernel-fitimage"
KERNEL_IMAGETYPE = "Image.gz"

MACHINE_FEATURES = "hdmicec cec fb usbconsole serial usbgadget usbhost vfat ext2 rtc alsa screen ci usbconsole dreamboxv2 skins1080 recovery blindscan-tbs mmc emmc HDMI sbc nogamma alsa-utils pulseaudio alsamixer"

require conf/machine/include/dreambox-meson64.inc

IMAGE_ROOTFS_SIZE_ext4 = "524288"

IMAGE_FSTYPES =+ "tar.bz2"
IMAGEDIR = "${MACHINE}"

do_image_tar[depends] += " mkbootimg-native:do_populate_sysroot"

IMAGE_CMD:tar:prepend = " \
	mkdir -p ${IMAGE_ROOTFS}/usr/lib; \
	if [ "${PACKAGE_LIST}" = "1" ]; then \
        cp ${IMAGE_MANIFEST} ${IMAGE_ROOTFS}/usr/lib/package.lst; \
    fi; \
    mkdir -p ${IMAGE_ROOTFS}/tmp; \
    mkdir -p ${IMAGE_ROOTFS}/var/lib/opkg/info; \
    echo "#!/bin/sh" > ${IMAGE_ROOTFS}/var/lib/opkg/info/kernel-image.postinst; \
    echo "[ -n \"$D\" ] || flash-kernel -c 'console=ttyS0,1000000 root=/dev/mmcblk0p7 rootwait rootfstype=ext4 no_console_suspend' /boot/Image.gz-4.9" >> ${IMAGE_ROOTFS}/var/lib/opkg/info/kernel-image.postinst; \
    chmod 777 ${IMAGE_ROOTFS}/var/lib/opkg/info/kernel-image.postinst; \
    mkdir -p ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}; \
    mkbootimg --base 0 --kernel_offset 0x1080000 --second_offset 0x1000000 -o ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}/${KERNEL_FILE} --kernel ${DEPLOY_DIR_IMAGE}/Image.gz --second ${DEPLOY_DIR_IMAGE}/${MACHINE}.dtb --board ${BOARD} --cmdline "logo=osd0,loaded,0x7f800000 vout=1080p60hz,enable hdmimode=1080p60hz fb_width=1280 fb_height=720  console=ttyS0,1000000 root=/dev/mmcblk0p7 rootwait rootfstype=ext4 no_console_suspend"; \
    echo ${DISTRO_NAME}-${DISTRO_VERSION}.${BUILD_VERSION} > ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}/imageversion; \
    echo "To update with the webbrowser select rootfs-${BOARD}.tar.bz2" > ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}/${MACHINE}_READ.ME; \
    cd ${IMAGE_ROOTFS}; \
    /usr/bin/fakeroot tar -cvf ${DEPLOY_DIR_IMAGE}/rootfs-${BOARD}.tar -C ${IMAGE_ROOTFS} .; \
    mv ${DEPLOY_DIR_IMAGE}/rootfs-${BOARD}.tar ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}/rootfs-${BOARD}.tar; \
    bzip2 ${DEPLOY_DIR_IMAGE}/${IMAGEDIR}/rootfs-${BOARD}.tar; \
    cd ${DEPLOY_DIR_IMAGE}; \
    zip ${IMAGE_NAME}_mmc.zip ${IMAGEDIR}/*; \
    rm -f ${DEPLOY_DIR_IMAGE}/*.rootfs-${BOARD}.tar.bz2; \
    rm -f ${DEPLOY_DIR_IMAGE}/.tar.bz2; \
    rm -f ${DEPLOY_DIR_IMAGE}/*.manifest; \
    rm -f ${DEPLOY_DIR_IMAGE}/.manifest; \
    rm -Rf ${IMAGEDIR}; \
    "

IMAGE_CMD:tar:append = " ; \
    cd ${DEPLOY_DIR_IMAGE}; \
    rm -f *.rootfs.manifest; \
    rm -f .manifest; \
    "

BBMASK = "meta-vuplus/recipes-graphics/"
BBMASK += "meta-vuplus/recipes-webkit/"
BBMASK += "modutils-initscripts.*\.bbappend"